images:
  - location: "https://cloud-images.ubuntu.com/noble/current/noble-server-cloudimg-amd64.img"
    arch: "x86_64"
  - location: "https://cloud-images.ubuntu.com/noble/current/noble-server-cloudimg-arm64.img"
    arch: "aarch64"

cpus: 4

memory: 16GiB

disk: 100GiB

networks:
  - lima: user-v2

containerd:
  system: false
  user: false
  archives: null

mountType: virtiofs
mounts:
  - location: "~/Repositories"
    writable: true
  - location: "/tmp/lima"
    writable: true

provision:
  - mode: system
    script: |
      #!/bin/bash
      set -eux -o pipefail
      apt-get update --yes
      apt-get upgrade --yes
      apt-get install glances bridge-utils --yes
      apt-get dist-upgrade --yes
      apt-get autoremove --yes
      apt-get clean
  - mode: system  
    script: |
      #!/bin/bash
      set -eux -o pipefail
      apt-get update
      apt-get install ca-certificates curl
      install -m 0755 -d /etc/apt/keyrings
      curl -fsSL https://download.docker.com/linux/ubuntu/gpg --output /etc/apt/keyrings/docker.asc
      chmod a+r /etc/apt/keyrings/docker.asc
      echo \
        "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu \
        $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | tee /etc/apt/sources.list.d/docker.list > /dev/null
      apt-get update
      apt-get install --yes docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
  - mode: system
    script: |
      #!/bin/bash
      set -eux -o pipefail
      ARCH=$(uname -m)
      CLUSTERCTL_VERSION="1.10.0"
      if [ "$ARCH" == "x86_64" ]; then
        CLUSTERCTL_URL="ttps://github.com/kubernetes-sigs/cluster-api/releases/download/v${K0S_VERSION}/clusterctl-linux-amd64"
      elif [ "$ARCH" == "aarch64" ]; then
        CLUSTERCTL_URL="ttps://github.com/kubernetes-sigs/cluster-api/releases/download/v${K0S_VERSION}/clusterctl-linux-arm64"
      else
        exit 1
      fi
      curl --silent --location --fail --remote-name-all --request GET "$CLUSTERCTL_URL" --output /tmp/clusterctl
      install -m 755 /tmp/clusterctl /usr/local/bin/clusterctl
      rm -rf /tmp/*
  - mode: system
    script: |
      #!/bin/bash
      set -eux -o pipefail
      ARCH=$(uname -m)
      KUBECTL_VERSION="1.32.3"
      if [ "$ARCH" == "x86_64" ]; then
        KUBECTL_URL="https://dl.k8s.io/release/v${KUBECTL_VERSION}/bin/linux/amd64/kubectl"
      elif [ "$ARCH" == "aarch64" ]; then
        KUBECTL_URL="https://dl.k8s.io/release/v${KUBECTL_VERSION}/bin/linux/arm64/kubectl"
      else
        exit 1
      fi
      curl --silent --location --fail --remote-name-all --request GET "$KUBECTL_URL" --output /tmp/kubectl
      install -m 755 /tmp/kubectl /usr/local/bin/kubectl
      rm -rf /tmp/*
  - mode: system
    script: |
      #!/bin/bash
      set -eux -o pipefail
      ARCH=$(uname -m)
      K9S_VERSION="0.50.4"
      if [ "$ARCH" == "x86_64" ]; then
        K9S_URL="https://github.com/derailed/k9s/releases/download/v$K9S_VERSION/k9s_Linux_amd64.tar.gz"
      elif [ "$ARCH" == "aarch64" ]; then
        K9S_URL="https://github.com/derailed/k9s/releases/download/v$K9S_VERSION/k9s_Linux_arm64.tar.gz"
      else
        exit 1
      fi
      curl --silent --location --fail --remote-name-all --request GET "$K9S_URL" --output /tmp/k9s.tar.gz
      tar --extract --gzip --file /tmp/k9s.tar.gz --directory /usr/local/bin
      rm -rf /tmp/*
  - mode: system
    script: |
      #!/bin/bash
      set -eux -o pipefail
      ARCH=$(uname -m)
      CILIUM_VERSION="0.18.3"
      if [ "$ARCH" == "x86_64" ]; then
        CILIUM_URL="https://github.com/cilium/cilium-cli/releases/download/v$CILIUM_VERSION/cilium-linux-amd64.tar.gz"
      elif [ "$ARCH" == "aarch64" ]; then
        CILIUM_URL="https://github.com/cilium/cilium-cli/releases/download/v$CILIUM_VERSION/cilium-linux-arm64.tar.gz"
      else
        exit 1
      fi
      curl --silent --location --fail --remote-name-all --request GET "$CILIUM_URL" --output /tmp/cilium.tar.gz
      tar --extract --gzip --file /tmp/cilium.tar.gz --directory /usr/local/bin
      rm -rf /tmp/*
  - mode: system
    script: |
      #!/bin/bash
      set -eux -o pipefail
      mkdir /etc/k0s
      tee /etc/k0s/compose.yaml > /dev/null <<EOL
      
      EOL
